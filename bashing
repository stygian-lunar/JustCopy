#######python check

#!/bin/bash

zip_file="your_zip_file.zip"  # Replace with the actual ZIP file path

# Check if there are any Python files in the ZIP file without extracting
if zipinfo -1 "$zip_file" | grep -q '\.py$'; then
    result=1  # True
else
    result=0  # False
fi

# Return the result
exit "$result"







---------------------------------------------
- name: Fetch GitHub repositories
  github_repository:
    organization: "your_organization"
    token: "your_github_token"
  register: github_repos

- name: Register GitHub repositories as a fact
  set_fact:
    repo_list: "{{ github_repos.repositories | map(attribute='full_name') | list }}"


import org.springframework.cloud.gateway.filter.GatewayFilter;
import org.springframework.cloud.gateway.filter.GatewayFilterChain;
import org.springframework.cloud.gateway.filter.GlobalFilter;
import org.springframework.core.Ordered;
import org.springframework.http.server.reactive.ServerHttpRequest;
import org.springframework.stereotype.Component;
import org.springframework.web.server.ServerWebExchange;
import reactor.core.publisher.Mono;

@Component
public class LoggingFilter implements GlobalFilter, Ordered {

    @Override
    public Mono<Void> filter(ServerWebExchange exchange, GatewayFilterChain chain) {
        ServerHttpRequest request = exchange.getRequest();
        String url = request.getURI().toString();
        String method = request.getMethodValue();

        System.out.println("API Gateway Request: " + method + " " + url);

        return chain.filter(exchange);
    }

    @Override
    public int getOrder() {
        return Ordered.LOWEST_PRECEDENCE; // Ensures this filter runs last
    }
}
